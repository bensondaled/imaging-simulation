batch_1: varied n_cells, noise magnitude, cell timing offset
batch_2: after fixing a few things, varied neuropil magnitude -- caused arpfit to break down
batch_3: switched to gaussian noise, again varying neuropil magnitude
batch_4: varied the level of gaussian noise
batch_5: varied the timing
batch_6: varied timing in the same way as 5, but changed soma_density_field from 45 to 100
batch_7: varied cell number
batch_8: just like 4, in that we varied gaussian noise, but with a tighter
range of values, b/c noise went too high


to make corrcoef plots:
1. take all input cells, filter for expression >2
2. filter these cells for only those matched, with >20% coverage overlap
3. for each of these, if multiple output cells map onto it, choose one with
highest power as the match
4. with 1 to 1 pairs, calculate corrcoef
5. show one dot for each condition along x axis, with the value being the mean
of the corrcoefs for all cells in that condition that passed these tests

work flow for basic analysis, in case you forget:
start by editing the analyze.py script to match everything you want. (ex batch
near first line)
then run python analyze.py count
to see how many simulations are available given the batch you chose
then submit job_analysis -tc 50 n where n is the number is just showed
then let them finish, run manually if any stall by doing python analyze.py
parse x where x are the stalled numbers
then run python analyze.py merge to merge all the data just created
then run your desired thing, ex. python analyze.py figure 3
